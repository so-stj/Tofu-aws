---
name: "Workflow Terraform Apply"
on:
  pull_request: ①
    branches:
      - (Planを自動実行させたいブランチ名を指定)
    types:
      - closed ②
  workflow_dispatch: ③

  workflow_call:
    inputs:
      TF_VERSION:
        type: string
        required: true

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  ROLE_TO_ASSUME: arn:aws:iam::(略):role/(OpenID Connect でGithub Actions が利用するIAMロール名)

jobs:
  terraform:
    name: "Terraform Directory Checks"
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true ②
    strategy:
      matrix:
        directory:
          [
            "(同じレポジトリ内にあるTerraformのコードがある場所を指定)"
          ]
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2

# .terraform-version で定義しているTerraformバージョンを取得
      - name: Get Terraform version
        id: terraform-version
        uses: bigwheel/get-terraform-version-action@v1.2.0
        with:
          path: ${{ matrix.directory }}

# .terraform-version で定義しているTerraformバージョンでinit
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ steps.terraform-version.outputs.terraform-version }}

      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Check if directory is not empty
        id: check
        run: |
          if [ "$(ls -A .)" ]; then
            echo "Directory is not empty"
          else
            echo "Directory is empty"
            exit 1
          fi

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Apply
        id: apply
        working-directory: ${{ matrix.directory }}
        run: |
          terraform apply -auto-approve -no-color

      - name: truncate terraform apply result
        run: |
          apply=$(cat <<'EOF'
          ${{ format('{0}{1}', steps.apply.outputs.stdout, steps.apply.outputs.stderr) }}
          EOF
          )
          echo "PLAN<<EOF" >> $GITHUB_ENV
          echo "${apply}" | grep -v 'Refreshing state' | tail -c 65000 >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
