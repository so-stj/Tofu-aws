name: "Workflow for OpenTofu Plan"

on:
  pull_request:
    branches:
      - main  # ‚Üê Plan „ÇíÂÆüË°å„Åó„Åü„ÅÑ„Éñ„É©„É≥„ÉÅÂêç„Å´Â§âÊõ¥
    types: [opened, synchronize]

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  ROLE_TO_ASSUME: ${{ secrets.AWS_OIDC_ROLE_ARN }}
  AWS_REGION: us-east-1

jobs:
  opentofu:
    name: "OpenTofu Directory Checks"
    runs-on: self-hosted
    strategy:
      matrix:
        directory:
          - "inra/ec2"  # ‚Üê Terraform„Ç≥„Éº„Éâ„ÅÆ„ÅÇ„Çã„Éá„Ç£„É¨„ÇØ„Éà„É™„ÇíÂàóÊåô
          
    defaults:
      run:
        working-directory: ${{ matrix.directory }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: configure aws credential
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ env.AWS_ROLE_ARN }}

      - name: Check if directory is not empty
        id: check
        run: |
          if [ "$(ls -A .)" ]; then
            echo "Directory is not empty"
          else
            echo "Directory is empty"
            exit 1
          fi

      - name: OpenTofu Init
        id: init
        run: tofu init

      - name: OpenTofu Plan
        id: plan
        run: |
          tofu plan -no-color | tee plan.txt
        continue-on-error: true

      - name: Truncate Plan Output
        run: |
          echo "PLAN_OUTPUT<<EOF" >> $GITHUB_ENV
          grep -v 'Refreshing state' plan.txt | tail -c 65000 >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create PR Comment with Plan Result
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### OpenTofu Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### OpenTofu Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN_OUTPUT}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Directory: \`${{ matrix.directory }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
